{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "3206cab5-7f7d-4b56-b6a0-6e21f5670a94",
   "metadata": {},
   "source": [
    "Decision_control"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "bcccfcc5-ac17-468d-b6fc-fde993533aec",
   "metadata": {},
   "outputs": [],
   "source": [
    "a = 33"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c5dfd8e4-8f8c-4288-b13f-26f962a3d6e2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "false\n"
     ]
    }
   ],
   "source": [
    "if a==34:\n",
    "   print('true')\n",
    "else:\n",
    "   print('false')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "98363fe5-9558-4655-a3d7-44c6f24b24a8",
   "metadata": {},
   "outputs": [],
   "source": [
    "#(if it is grater then \"0\" , print positive) ,,(if it is les then \"0\",print negative) ,, (if it is equal to \"0\" , print \"0\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "03ecf9d7-f147-4351-85fd-7dbae639d900",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter the value 0\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "zero\n"
     ]
    }
   ],
   "source": [
    "num = int(input('enter the value'))\n",
    "if num>0:\n",
    "    print('positive')\n",
    "elif num<0:\n",
    "    print('negative')\n",
    "else:\n",
    "    print('zero')\n",
    "         \n",
    "\n",
    "\n",
    "          \n",
    "          \n",
    "          "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "a1a0cacf-5f52-447c-8825-b03c8a2c58c5",
   "metadata": {},
   "outputs": [],
   "source": [
    "#if a person age:18 ya greater then (is able to vote) other wise (not able to vote)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "5e0e2793-e86c-48ed-83b5-0f1b27b88c17",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter age 15\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "is not able to vote\n"
     ]
    }
   ],
   "source": [
    "num = int(input('enter age'))\n",
    "\n",
    "if num>=18:\n",
    "    print(' able to vote')\n",
    "else:\n",
    "    print('is not able to vote')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "4c780e5c-d6c0-4bcc-8548-79f4ea007ec5",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Given a number if it is divisible by \"2\" then print Even ,either odd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "43669aab-4490-4747-b7d1-153f21793cff",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter the number 5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "odd\n"
     ]
    }
   ],
   "source": [
    "num= int(input('enter the number'))\n",
    "if num%2==0:\n",
    "    print('even')\n",
    "else:\n",
    "    print('odd')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "e950596a-f670-43be-b5a2-806630878307",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Given a number,check if it is divisible by both 5 and 10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "011ea5e9-8cc4-41a2-accf-b2f842adf068",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter the number 5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Divisible\n"
     ]
    }
   ],
   "source": [
    "num= int(input('enter the number'))\n",
    "if num%5==0:\n",
    "    print('Divisible')\n",
    "else:\n",
    "    print('not')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "6afb4e33-b6a1-4363-8d4a-edcf3e47e4d1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter the age 19\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adult\n"
     ]
    }
   ],
   "source": [
    "num= int(input('enter the age'))\n",
    "if num>=18:\n",
    "    print('Adult')\n",
    "else:\n",
    "    print('Minor')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "2b6cfa77-0120-43eb-81d5-61420f5550bd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter the Number 59\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Greater\n"
     ]
    }
   ],
   "source": [
    "num= int(input('enter the Number'))\n",
    "if num>=50:\n",
    "    print('Greater')\n",
    "else:\n",
    "    print('smaller')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "855937e6-c96d-4c71-8ce4-323e494e3148",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter the grade A\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "excellent\n"
     ]
    }
   ],
   "source": [
    "grade= input('enter the grade')\n",
    "if grade==\"A\":\n",
    "   print(\"excellent\")\n",
    "elif grade==\"B\":\n",
    "     print(\"good\")\n",
    "else:\n",
    "    print(\"need improvment\")\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0c871d34-c6be-405c-a811-beacb09e02e1",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "72168af8-160f-4718-8f18-cc26df8c081f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
